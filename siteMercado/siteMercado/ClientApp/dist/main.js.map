{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/auth/auth.service.ts","webpack:///./src/app/core/auth/request.interceptor.ts","webpack:///./src/app/core/token/token.service.ts","webpack:///./src/app/core/user/user.service.ts","webpack:///./src/app/errors/not-authorized/not-authorized.component.html","webpack:///./src/app/errors/not-authorized/not-authorized.component.ts","webpack:///./src/app/errors/not-found/not-found.component.html","webpack:///./src/app/errors/not-found/not-found.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/login/login.component.css","webpack:///./src/app/home/login/login.component.html","webpack:///./src/app/home/login/login.component.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/produtos/cadastro/cadastro-produto.component.html","webpack:///./src/app/produtos/cadastro/cadastro-produto.component.ts","webpack:///./src/app/produtos/cadastro/cadastro-produto.service.ts","webpack:///./src/app/produtos/detalhes/detalhes-produto.component.html","webpack:///./src/app/produtos/detalhes/detalhes-produto.component.ts","webpack:///./src/app/produtos/edicao/edicao-produto.component.html","webpack:///./src/app/produtos/edicao/edicao-produto.component.ts","webpack:///./src/app/produtos/edicao/edicao-produto.service.ts","webpack:///./src/app/produtos/exclusao/exclusao-produto.component.html","webpack:///./src/app/produtos/exclusao/exclusao-produto.component.ts","webpack:///./src/app/produtos/exclusao/exclusao-produto.service.ts","webpack:///./src/app/produtos/produtos.component.html","webpack:///./src/app/produtos/produtos.component.ts","webpack:///./src/app/produtos/produtos.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProdutosComponent } from './produtos/produtos.component';\r\nimport { CadastroProduto } from './produtos/cadastro/cadastro-produto.component';\r\nimport { EdicaoProduto } from './produtos/edicao/edicao-produto.component';\r\nimport { DetalhesProduto } from './produtos/detalhes/detalhes-produto.component';\r\nimport { RequestInterceptor } from './core/auth/request.interceptor';\r\nimport { ExclusaoProduto } from './produtos/exclusao/exclusao-produto.component';\r\nimport { LoginComponent } from './home/login/login.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { NotAuthorizedComponent } from './errors/not-authorized/not-authorized.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        LoginComponent,\r\n        HomeComponent,\r\n        ProdutosComponent,\r\n        CadastroProduto,\r\n        EdicaoProduto,\r\n        DetalhesProduto,\r\n        ExclusaoProduto\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        BrowserAnimationsModule,\r\n        ToastrModule.forRoot(),\r\n        RouterModule.forRoot([\r\n            { path: '', component: LoginComponent, pathMatch: 'full' },\r\n            { path: 'home', component: HomeComponent },\r\n            { path: 'produtos', component: ProdutosComponent },\r\n            { path: 'not-found', component: NotFoundComponent },\r\n            { path: 'not-authorized', component: NotAuthorizedComponent },\r\n            { path: '**',redirectTo: 'not-found'}\r\n        ])\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: RequestInterceptor,\r\n            multi: true\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { UserService } from '../user/user.service';\r\nimport { ResponseModel } from '../../models/response';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst URL_API = environment.ApiUrl;\r\n\r\n// Define o cabeçalho da chamada\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private userService: UserService\r\n    ) { }\r\n\r\n    \r\n\r\n    // Faz uma requisição para a API enviando os dados\r\n    autenticacao(userID: string, accessKey: string) {\r\n        return this.http\r\n            .post(URL_API + '/login',\r\n                { userID, accessKey, grantType: 'password' },\r\n                { headers: httpOptions.headers, observe: \"response\" })\r\n            .pipe(tap(res => {\r\n\r\n                let responseModel = (<ResponseModel>res.body.valueOf());\r\n\r\n                // Obtém o retorno\r\n                if (responseModel.autenticated != false) {\r\n\r\n                    // Salva o token\r\n                    this.userService.setToken(responseModel.accessToken);\r\n                    this.userService.setRefreshToken(responseModel.refreshToken);\r\n                }\r\n            }));\r\n    }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, flatMap } from 'rxjs/operators';\r\n\r\nimport { TokenService } from '../token/token.service';\r\nimport { ResponseModel } from '../../models/response';\r\nimport { UserService } from '../user/user.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst URL_API = environment.ApiUrl;\r\n\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n\r\n    // Classe responsável por interceptar todas as requisições e verificar se o token está expirado\r\n    // Caso esteja, enviar para a tela de não autorizado, senão atualiza o token no servidor\r\n\r\n    isRefreshingToken: boolean = false;\r\n\r\n    constructor(\r\n        private tokenService: TokenService,\r\n        private router: Router,\r\n        private userService: UserService,\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (this.tokenService.hasToken()) {\r\n            const token = this.tokenService.getToken();\r\n\r\n            //clonando a requisição e setando o header com o token\r\n            if (token) {\r\n                req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\r\n            }\r\n\r\n            if (!req.headers.has('Content-Type')) {\r\n                req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\r\n            }\r\n\r\n            req = req.clone({ headers: req.headers.set('Accept', 'application/json') });\r\n            /*\r\n            req = req.clone({ headers: req.headers.set('Access-Control-Allow-Origin', '*') });\r\n            req = req.clone({ headers: req.headers.set('Access-Control-Request-Headers', '*') });\r\n            req = req.clone({ headers: req.headers.set('Access-Control-Allow-Methods', 'GET, POST, DELETE, OPTIONS') });\r\n*/\r\n        }\r\n\r\n        //verificando erros do retorno 401 (não autotizado) para fazer ou não uma nova requisição\r\n        return next.handle(req).pipe(catchError((error) => {\r\n\r\n            if (error.status == 401 && error.statusText == \"OK\") {\r\n\r\n                var userId = this.userService.getUser().unique_name;\r\n                var refreshToken = this.tokenService.getRefreshToken()\r\n\r\n                //refazendo a requisição para o refresh token\r\n                return this.http.post(URL_API + '/login',\r\n                    { userId, refreshToken, grantType: 'refresh_token', },//body\r\n                    { observe: 'response' })\r\n\r\n                    //mesclando as requisições e emitindo apenas uma no final\r\n                    .pipe(flatMap(res => {\r\n                        let responseModel = (<ResponseModel>res.body.valueOf());\r\n\r\n                        //caso o token retornado seja difirente undefined, significa que o token secundario ainda é valido\r\n                        if (responseModel.accessToken != undefined) {\r\n\r\n                            this.userService.setToken(responseModel.accessToken);\r\n                            this.userService.setRefreshToken(responseModel.refreshToken);\r\n\r\n                            //criando e emitindo uma nova requisição requisição com os dados do token atualizado\r\n                            const cloneReq = req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + responseModel.accessToken) });\r\n                            return next.handle(cloneReq);\r\n\r\n                        } else {\r\n                            this.router.navigate(['/not-authorized']);\r\n                            this.tokenService.deleteToken();\r\n                        }\r\n                    }));\r\n            } else {\r\n                throw error;\r\n            }\r\n        }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nconst KEY = 'authToken';\r\nconst refreshToken = 'refreshToken';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n\tconstructor() { }\r\n\r\n\tsetToken(token: string) {\r\n\t\twindow.localStorage.setItem(KEY, token);\r\n\t}\r\n\r\n\tsetRefereshToken(refresh: string){\r\n\t\twindow.localStorage.setItem(refreshToken, refresh);\r\n\t}\r\n\r\n\tgetRefreshToken(){\r\n\t\treturn window.localStorage.getItem(refreshToken);\r\n\t}\r\n\r\n\tgetToken() {\r\n\t\treturn window.localStorage.getItem(KEY);\r\n\t}\r\n\r\n\tdeleteToken() {\r\n\t\twindow.localStorage.removeItem(KEY);\r\n\t}\r\n\r\n\thasToken() {\r\n\t\treturn !!this.getToken();\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { TokenService } from '../token/token.service';\r\nimport { User } from '../../models/user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    private userSubject = new BehaviorSubject<User>(null);\r\n    private user: User;\r\n\r\n    constructor(private tokenService: TokenService) {\r\n        this.tokenService.hasToken() && this.decodeJWT();\r\n     }\r\n\r\n    setToken(token: string): void {\r\n        this.tokenService.setToken(token);\r\n        this.decodeJWT();\r\n    }\r\n\r\n    setRefreshToken(refresh: string){\r\n        this.tokenService.setRefereshToken(refresh);\r\n    }\r\n\r\n    isLogged(): boolean {\r\n        return this.tokenService.hasToken();\r\n    }\r\n\r\n    logout(){\r\n        this.tokenService.deleteToken();\r\n    }\r\n\r\n    getUserObservable(){\r\n        return this.userSubject.asObservable();\r\n    }\r\n\r\n    decodeJWT(){\r\n        const token = this.tokenService.getToken();\r\n        const user = jwt_decode(token) as User;\r\n        this.user = user;\r\n        this.userSubject.next(user);\r\n    }\r\n\r\n    getUser(): User{\r\n        return this.user;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row icon-color\\\">\\r\\n    <div class=\\\"valign-wrapper m-background-color\\\">\\r\\n        <div class=\\\"col s12 m8 l5 xl5 m-align-center\\\">\\r\\n            <div class=\\\"card z-depth-5\\\">\\r\\n                <div class=\\\"card-image\\\">\\r\\n                    <img src=\\\"../../../assets/401.png\\\">\\r\\n                    <span class=\\\"card-title m-pb-4\\\">Acesso não autorizado. <br> Sessão expirada.</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row right\\\">\\r\\n                <div class=\\\"col m-pr-0\\\">\\r\\n                    <a class=\\\"waves-effect waves-light col blue darken-4 btn z-depth-5\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'pmo-notauthorized',\r\n    templateUrl: './not-authorized.component.html'\r\n})\r\nexport class NotAuthorizedComponent{}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"error-template\\\">\\r\\n        <h1>\\r\\n          Oops!\\r\\n        </h1>\\r\\n        <h2>\\r\\n          404 Not Found\\r\\n        </h2>\\r\\n        <div class=\\\"error-details\\\">\\r\\n          Sorry, an error has occured, Requested page not found!\\r\\n        </div>\\r\\n        <div class=\\\"error-actions\\\">\\r\\n          <a href=\\\"http://www.jquery2dotnet.com\\\" class=\\\"btn btn-primary btn-lg\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-home\\\"></span>\\r\\n            Take Me Home\\r\\n          </a><a href=\\\"http://www.jquery2dotnet.com\\\" class=\\\"btn btn-default btn-lg\\\"><span class=\\\"glyphicon glyphicon-envelope\\\"></span> Contact Support </a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'pmo-notfound',\r\n    templateUrl: './not-found.component.html'\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n    ngOnInit(): void { }\r\n}\r\n","module.exports = \"<h1>Olá, mundo!</h1>\\r\\n<p> SiteMercado é um sistema de gestão de supermercados.\\r\\n</p>\\r\\n\\r\\n<p>A versão 1.0.0 possui as seguintes funcionalidades:</p>\\r\\n<ul>\\r\\n  <li><strong>Produtos</strong>: Cadastro/ Visualização/ Edição e Exclusão</li>\\r\\n</ul>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (submit)=\\\"login()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"userID\\\">Email</label>\\r\\n    <input #userIDInput formControlName=\\\"userID\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"userID\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Digite seu email\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"accessKey\\\">Senha</label>\\r\\n    <input formControlName=\\\"accessKey\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"accessKey\\\" placeholder=\\\"Senha\\\">\\r\\n  </div>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n</form>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef, Renderer } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from 'src/app/core/auth/auth.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { ResponseModel } from 'src/app/models/response';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\ndeclare let Materialize: any;\r\n\r\n@Component({\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    loginForm: FormGroup;\r\n    user: User;\r\n    @ViewChild('userIDInput') userIDInput: ElementRef<HTMLInputElement>;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        private router: Router,\r\n        private render: Renderer,\r\n        private toastr: ToastrService\r\n    ) { }\r\n\r\n    // Dispara ao iniciar o componente\r\n    ngOnInit(): void {\r\n        this.loginForm = this.formBuilder.group({\r\n            userID: ['',\r\n                [\r\n                    Validators.required,\r\n                    Validators.pattern(/^[a-z-_.]+@+[a-z-]+\\.[a-z]+\\.?([a-z]+)?$/)\r\n                ]\r\n            ],\r\n            accessKey: ['', Validators.required]\r\n        })\r\n    }\r\n\r\n    // Realiza a autenticação\r\n    login() {\r\n\r\n        // Obtém usuário e senha informados\r\n        const userID = this.loginForm.get('userID').value;\r\n        const accessKey = this.loginForm.get('accessKey').value;\r\n\r\n        // Tenta realizar a autenticação\r\n        this.authService\r\n            .autenticacao(userID, accessKey)\r\n            .subscribe((response) => {\r\n\r\n                // Obtém o retorno\r\n                let responseModel = (<ResponseModel>response.body.valueOf());\r\n\r\n                // Define o caminho a ser percorrido\r\n                if (responseModel.message == 'Failed to autheticate') {\r\n                    this.toastr.error('Erro de autenticação, usuário ou senha inválidos.');\r\n                }\r\n\r\n                if (responseModel.message == 'OK') {\r\n                    this.router.navigate(['home'])\r\n                }\r\n            })\r\n    }\r\n}\r\n","module.exports = \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\"","module.exports = \"<header>\\r\\n  <nav class='navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3'>\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]='[\\\"/\\\"]'>siteMercado</a>\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\" (click)=\\\"toggle()\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\" [ngClass]='{\\\"show\\\": isExpanded}'>\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]' [routerLinkActiveOptions]='{ exact: true }'>\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/home\\\"]'>Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/produtos\\\"]'>Produtos</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/\\\"]'>Sair</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","module.exports = \"<!-- Modal -->\\r\\n<div id=\\\"modalCadastrar\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Cadastro de produto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n      <form [formGroup]=\\\"formCadastrar\\\" (submit)=\\\"cadastrarProduto(formCadastrar)\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Descrição:</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Preço:</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"preco\\\" formControlName=\\\"preco\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Estoque:</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"estoque\\\" formControlName=\\\"estoque\\\">\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Fechar</button>\\r\\n          <button [disabled]=\\\"formCadastrar.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Cadastrar</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Inject, HostListener, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Produto } from '../../models/produto';\r\nimport { CadastroProdutoService } from './cadastro-produto.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'cadastro-produto',\r\n    templateUrl: './cadastro-produto.component.html'\r\n})\r\n\r\n\r\nexport class CadastroProduto implements OnInit {\r\n\r\n    // Avisa o componente pai que um novo registro foi inserido\r\n    @Output() atualizarGrid = new EventEmitter<string>();\r\n\r\n    // Instancia um formulário\r\n    formCadastrar: FormGroup;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private CadastroProdutoService: CadastroProdutoService,\r\n        private toastr: ToastrService\r\n    ) { }\r\n\r\n    // Dispara ao iniciar o componente\r\n    ngOnInit(): void {\r\n        this.formCadastrar = this.formBuilder.group({\r\n            descricao: ['', [Validators.required]],\r\n            preco: ['', [Validators.required]],\r\n        });\r\n    }\r\n\r\n    // Exibe o modal\r\n    public abrirModal() {\r\n        $('#modalCadastrar').modal('show');\r\n    }\r\n\r\n    // Oculta o modal\r\n    public fecharModal() {\r\n        $('#modalCadastrar').modal('hide');\r\n    }\r\n\r\n    // Cadastra o produto no banco de dados\r\n    public cadastrarProduto(event: FormGroup) {\r\n\r\n        // Cria um objeto Produto e o preenche com os dados do formulário\r\n        let produto: Produto;\r\n        produto = event.getRawValue();\r\n\r\n        // Define a data em que está ocorrendo o cadastro\r\n        produto.dataCadastro = new Date();\r\n\r\n        // Envia os dados para o serviço chamar a API\r\n        this.CadastroProdutoService\r\n            .postProduto(produto)\r\n            .subscribe((response) => {\r\n\r\n                // Obtém a resposta\r\n                let httpResponse = response;\r\n\r\n                // Retorna ao usuário o resultado do processamento\r\n                if (httpResponse.status == 400 || httpResponse.status == 401) {\r\n                    this.toastr.error('Não foi possível cadastrar o produto! Tente novamente em instantes.');\r\n                } else if (httpResponse.status == 500) {\r\n                    this.toastr.error('Falha na comunicação com o servidor! Tente novamente em instantes.');\r\n                } else {\r\n                    this.toastr.success('Produto cadastrado com sucesso!');\r\n\r\n                    // Fecha o modal e avisa o componente pai para atualizar a grid\r\n                    this.fecharModal();\r\n                    this.atualizarGrid.next();\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n                this.toastr.error('Erro! Não foi possível cadastrar o produto.');\r\n            });\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Component, Inject, HostListener, OnInit, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Produto } from '../../models/produto';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CadastroProdutoService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    // Solicita a API a inserção do Produto\r\n    postProduto(produto: Produto) {\r\n\r\n        // Define o cabeçalho da chamada\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n        }\r\n\r\n        // Converte para JSON o objeto Produto\r\n        let body = JSON.stringify(produto);\r\n\r\n        // Chama a API enviando os parâmetros\r\n        return this.http.post(environment.ApiUrl + '/Produtos/', body, { headers: httpOptions.headers, observe: \"response\" });\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<!-- Modal -->\\r\\n<div id=\\\"modalDetalhes\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Edição de produto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n\\r\\n      <form [formGroup]=\\\"formDetalhes\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n          <input type=\\\"hidden\\\" formControlName=\\\"id\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Descrição:</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\" >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Preço:</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"preco\\\" formControlName=\\\"preco\\\" >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Estoque:</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"estoque\\\" formControlName=\\\"estoque\\\" >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Data de cadastro:</label>\\r\\n            <input type=\\\"datetime\\\" class=\\\"form-control\\\" id=\\\"dataCadastro\\\" formControlName=\\\"dataCadastro\\\" >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Data de Atualização:</label>\\r\\n            <input type=\\\"datetime\\\" class=\\\"form-control\\\" id=\\\"dataAtualizacao\\\" formControlName=\\\"dataAtualizacao\\\" >\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Fechar</button>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Inject, HostListener, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Produto } from '../../models/produto';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'detalhes-produto',\r\n    templateUrl: './detalhes-produto.component.html'\r\n})\r\n\r\n\r\nexport class DetalhesProduto implements OnInit{\r\n\r\n    // Recebe os dados do componente pai\r\n    @Input() produto: Produto;\r\n\r\n    // Avisa o componente pai que um novo registro foi inserido\r\n    @Output() atualizarGrid = new EventEmitter<string>();\r\n\r\n    // Instancia um formulário\r\n    formDetalhes: FormGroup;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService\r\n    ) { }\r\n\r\n    // Dispara ao iniciar o componente\r\n    ngOnInit(): void {\r\n        this.formDetalhes = this.formBuilder.group({\r\n            id: ['', [Validators.required]],\r\n            dataCadastro: [''],\r\n            dataAtualizacao: [''],\r\n            descricao: ['', [Validators.required]],\r\n            preco: ['', [Validators.required]],\r\n            estoque: ['', [Validators.required]],\r\n        });\r\n    }\r\n\r\n    // Exibe o modal\r\n    public abrirModal() {\r\n        $('#modalDetalhes').modal('show');\r\n    }\r\n\r\n    // Oculta o modal\r\n    public fecharModal() {\r\n        $('#modalDetalhes').modal('hide');\r\n    }\r\n\r\n    // Preenche o formulário quando o objeto do componente pai chegar\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.produto != undefined) {\r\n            this.setarCampos();\r\n        }\r\n    }\r\n\r\n    // Preenche os campos do formulário e os desabilita\r\n    setarCampos() {\r\n        this.formDetalhes.get('id').setValue(this.produto.id);\r\n        this.formDetalhes.get('id').disable();\r\n        this.formDetalhes.get('dataCadastro').setValue(this.produto.dataCadastro);\r\n        this.formDetalhes.get('dataCadastro').disable();\r\n        this.formDetalhes.get('dataAtualizacao').setValue(this.produto.dataAtualizacao);\r\n        this.formDetalhes.get('dataAtualizacao').disable();\r\n        this.formDetalhes.get('descricao').setValue(this.produto.descricao);\r\n        this.formDetalhes.get('descricao').disable();\r\n        this.formDetalhes.get('preco').setValue(this.produto.preco);\r\n        this.formDetalhes.get('preco').disable();\r\n        this.formDetalhes.get('estoque').setValue(this.produto.estoque);\r\n        this.formDetalhes.get('estoque').disable();\r\n    }\r\n}\r\n\r\n\r\n","module.exports = \"<!-- Modal -->\\r\\n<div id=\\\"modalEditar\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Edição de produto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n\\r\\n      </div>\\r\\n      <form [formGroup]=\\\"formEditar\\\" (submit)=\\\"editarProduto(formEditar)\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <input type=\\\"hidden\\\" formControlName=\\\"id\\\">\\r\\n          <input type=\\\"hidden\\\" formControlName=\\\"dataCadastro\\\">\\r\\n          <input type=\\\"hidden\\\" formControlName=\\\"dataAtualizacao\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Descrição:</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Preço:</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"preco\\\" formControlName=\\\"preco\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Estoque:</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"estoque\\\" formControlName=\\\"estoque\\\">\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Fechar</button>\\r\\n          <button [disabled]=\\\"formEditar.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-warning\\\">Editar</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Inject, HostListener, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Produto } from '../../models/produto';\r\nimport { EdicaoProdutoService } from './edicao-produto.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'edicao-produto',\r\n    templateUrl: './edicao-produto.component.html'\r\n})\r\n\r\n\r\nexport class EdicaoProduto implements OnInit{\r\n\r\n    // Recebe os dados do componente pai\r\n    @Input() produto: Produto;\r\n\r\n    // Avisa o componente pai que um registro foi editado\r\n    @Output() atualizarGrid = new EventEmitter<string>();\r\n\r\n    // Instancia um formulário\r\n    formEditar: FormGroup;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private EdicaoProdutoService: EdicaoProdutoService,\r\n        private toastr: ToastrService\r\n    ) { }\r\n\r\n    // Dispara ao iniciar o componente\r\n    ngOnInit(): void {\r\n        this.formEditar = this.formBuilder.group({\r\n            id: ['', [Validators.required]],\r\n            dataCadastro: ['', [Validators.required]],\r\n            dataAtualizacao: [''],\r\n\r\n            descricao: ['', [Validators.required]],\r\n            preco: ['', [Validators.required]],\r\n            estoque: ['', [Validators.required]],\r\n\r\n        });\r\n    }\r\n\r\n    // Exibe o modal\r\n    public abrirModal() {\r\n        $('#modalEditar').modal('show');\r\n    }\r\n\r\n    // Oculta o modal\r\n    public fecharModal() {\r\n        $('#modalEditar').modal('hide');\r\n    }\r\n\r\n    // Preenche o formulário quando o objeto do componente pai chegar\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.produto != undefined) {\r\n            this.setarCampos();\r\n        }\r\n    }\r\n\r\n    // Preenche os campos do formulário e os desabilita\r\n    setarCampos() {\r\n        this.formEditar.get('id').setValue(this.produto.id);\r\n        this.formEditar.get('dataCadastro').setValue(this.produto.dataCadastro);\r\n        this.formEditar.get('dataAtualizacao').setValue(this.produto.dataAtualizacao);\r\n        this.formEditar.get('descricao').setValue(this.produto.descricao);\r\n        this.formEditar.get('preco').setValue(this.produto.preco);\r\n        this.formEditar.get('estoque').setValue(this.produto.estoque);\r\n    }\r\n\r\n\r\n    // Atualiza o produto no banco de dados\r\n    public editarProduto(event: FormGroup) {\r\n\r\n        // Cria um objeto Produto e o preenche com os dados do formulário\r\n        let produto: Produto;\r\n        produto = event.getRawValue();\r\n\r\n        // Define a data em que está ocorrendo a atualização\r\n        produto.dataAtualizacao = new Date();\r\n\r\n        // Envia os dados para o serviço chamar a API\r\n        this.EdicaoProdutoService\r\n            .putProduto(produto)\r\n            .subscribe((response) => {\r\n\r\n                // Obtém a resposta\r\n                let httpResponse = response;\r\n\r\n                // Retorna ao usuário o resultado do processamento\r\n                if (httpResponse.status == 400 || httpResponse.status == 401) {\r\n                    this.toastr.error('Não foi possível editar o produto! Tente novamente em instantes.');\r\n                } else if (httpResponse.status == 500) {\r\n                    this.toastr.error('Falha na comunicação com o servidor! Tente novamente em instantes.');\r\n                } else {\r\n                    this.toastr.success('Produto editado com sucesso!');\r\n\r\n                     // Fecha o modal e avisa o componente pai para atualizar a grid\r\n                    this.fecharModal();\r\n                    this.atualizarGrid.next();\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n                    this.toastr.error('Erro! Não foi possível editar o produto.');\r\n            });\r\n\r\n        console.log('teste');\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Component, Inject, HostListener, OnInit, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Produto } from '../../models/produto';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class EdicaoProdutoService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    // Solicita a API a atualização do Produto\r\n    putProduto(produto: Produto) {\r\n\r\n        // Define o cabeçalho da chamada\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n        }\r\n\r\n        // Converte para JSON o objeto Produto\r\n        let body = JSON.stringify(produto);\r\n\r\n        // Chama a API enviando os parâmetros\r\n        return this.http.put(environment.ApiUrl + `/Produtos/${produto.id}`, body, { headers: httpOptions.headers, observe: \"response\" });\r\n    }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<!-- Modal -->\\r\\n<div id=\\\"modalExcluir\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n    <!-- Modal content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Tem certeza que deseja excluir?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n\\r\\n      <form [formGroup]=\\\"formExcluir\\\" (submit)=\\\"excluirProduto(formExcluir)\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n          <input type=\\\"hidden\\\" formControlName=\\\"id\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Descrição:</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Preço:</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"preco\\\" formControlName=\\\"preco\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Estoque:</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"estoque\\\" formControlName=\\\"estoque\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Data de cadastro:</label>\\r\\n            <input type=\\\"datetime\\\" class=\\\"form-control\\\" id=\\\"dataCadastro\\\" formControlName=\\\"dataCadastro\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Data de Atualização:</label>\\r\\n            <input type=\\\"datetime\\\" class=\\\"form-control\\\" id=\\\"dataAtualizacao\\\" formControlName=\\\"dataAtualizacao\\\">\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Fechar</button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Excluir</button>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Inject, HostListener, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Produto } from '../../models/produto';\r\nimport { ExclusaoProdutoService } from './exclusao-produto.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'exclusao-produto',\r\n    templateUrl: './exclusao-produto.component.html'\r\n})\r\n\r\n\r\nexport class ExclusaoProduto implements OnInit{\r\n\r\n    // Recebe os dados do componente pai\r\n    @Input() produto: Produto;\r\n\r\n    // Avisa o componente pai que um registro foi editado\r\n    @Output() atualizarGrid = new EventEmitter<string>();\r\n\r\n    // Instancia um formulário\r\n    formExcluir: FormGroup;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private ExclusaoProdutoService: ExclusaoProdutoService,\r\n        private toastr: ToastrService\r\n    ) { }\r\n\r\n    // Dispara ao iniciar o componente\r\n    ngOnInit(): void {\r\n        this.formExcluir = this.formBuilder.group({\r\n            id: ['', [Validators.required]],\r\n            dataCadastro: ['', [Validators.required]],\r\n            dataAtualizacao: [''],\r\n\r\n            descricao: ['', [Validators.required]],\r\n            preco: ['', [Validators.required]],\r\n            estoque: ['', [Validators.required]],\r\n\r\n        });\r\n    }\r\n\r\n    // Exibe o modal\r\n    public abrirModal() {\r\n        $('#modalExcluir').modal('show');\r\n    }\r\n\r\n    // Oculta o modal\r\n    public fecharModal() {\r\n        $('#modalExcluir').modal('hide');\r\n    }\r\n\r\n    // Preenche o formulário quando o objeto do componente pai chegar\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.produto != undefined) {\r\n            this.setarCampos();\r\n        }\r\n    }\r\n\r\n    // Preenche os campos do formulário e os desabilita\r\n    setarCampos() {\r\n        this.formExcluir.get('id').setValue(this.produto.id);\r\n        this.formExcluir.get('id').disable();\r\n        this.formExcluir.get('dataCadastro').setValue(this.produto.dataCadastro);\r\n        this.formExcluir.get('dataCadastro').disable();\r\n        this.formExcluir.get('dataAtualizacao').setValue(this.produto.dataAtualizacao);\r\n        this.formExcluir.get('dataAtualizacao').disable();\r\n\r\n        this.formExcluir.get('descricao').setValue(this.produto.descricao);\r\n        this.formExcluir.get('descricao').disable();\r\n        this.formExcluir.get('preco').setValue(this.produto.preco);\r\n        this.formExcluir.get('preco').disable();\r\n        this.formExcluir.get('estoque').setValue(this.produto.estoque);\r\n        this.formExcluir.get('estoque').disable();\r\n\r\n    }\r\n\r\n    // Exclui o produto no banco de dados\r\n    public excluirProduto(event: FormGroup) {\r\n\r\n        // Cria um objeto Produto e o preenche com os dados do formulário\r\n        let produto: Produto;\r\n        produto = event.getRawValue();\r\n\r\n        // Envia os dados para o serviço chamar a API\r\n        this.ExclusaoProdutoService\r\n            .deleteProduto(produto)\r\n            .subscribe((response) => {\r\n\r\n                // Obtém a resposta\r\n                let httpResponse = response;\r\n\r\n                // Retorna ao usuário o resultado do processamento\r\n                if (httpResponse.status == 400 || httpResponse.status == 401) {\r\n                    this.toastr.error('Não foi possível excluir o produto! Tente novamente em instantes.');\r\n                } else if (httpResponse.status == 500) {\r\n                    this.toastr.error('Falha na comunicação com o servidor! Tente novamente em instantes.');\r\n                } else {\r\n                    this.toastr.success('Produto excluido com sucesso!');\r\n\r\n                    // Fecha o modal e avisa o componente pai para atualizar a grid\r\n                    this.fecharModal();\r\n                    this.atualizarGrid.next();\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n                    this.toastr.error('Erro! Não foi possível excluir o produto.');\r\n            });\r\n\r\n        console.log('teste');\r\n    }\r\n\r\n    \r\n\r\n\r\n}\r\n\r\n\r\n","import { Component, Inject, HostListener, OnInit, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Produto } from '../../models/produto';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ExclusaoProdutoService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    // Solicita a API a exclusão do Produto\r\n    deleteProduto(produto: Produto) {\r\n\r\n        // Define o cabeçalho da chamada\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n        }\r\n     \r\n        // Chama a API enviando o ID do produto na URL\r\n        return this.http.delete(environment.ApiUrl + `/Produtos/${produto.id}`, { headers: httpOptions.headers, observe: \"response\" });\r\n    }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<h1>Produtos</h1>\\r\\n\\r\\n<p>Lista de produtos cadastrados no banco de dados.</p>\\r\\n\\r\\n<p *ngIf=\\\"!produtos\\\"><em>Carregando...</em></p>\\r\\n\\r\\n<table class='table table-striped' *ngIf=\\\"produtos\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Descrição</th>\\r\\n      <th>Preço</th>\\r\\n      <th>Estoque</th>\\r\\n      <th>Ações</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let produto of produtos\\\">\\r\\n      <td>{{ produto.descricao }}</td>\\r\\n      <td>{{ produto.preco}}</td>\\r\\n      <td>{{ produto.estoque}}</td>\\r\\n      <td>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"VisualizarProduto(produto)\\\">Ver</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-warning\\\" (click)=\\\"EditarProduto(produto)\\\">Editar</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"ExcluirProduto(produto)\\\">Excluir</button>\\r\\n        </div>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"CadastrarProduto()\\\">Cadastrar</button>\\r\\n\\r\\n\\r\\n\\r\\n<cadastro-produto #CadastroProduto (atualizarGrid)=\\\"BuscarProdutos()\\\"></cadastro-produto>\\r\\n<edicao-produto #EdicaoProduto [produto]=\\\"InputProduto\\\" (atualizarGrid)=\\\"BuscarProdutos()\\\"></edicao-produto>\\r\\n<detalhes-produto #DetalhesProduto  [produto]=\\\"InputProduto\\\"></detalhes-produto>\\r\\n<exclusao-produto #ExclusaoProduto [produto]=\\\"InputProduto\\\" (atualizarGrid)=\\\"BuscarProdutos()\\\"></exclusao-produto>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, Inject, ViewChild, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CadastroProduto } from './cadastro/cadastro-produto.component';\r\nimport { Produto } from '../models/produto';\r\nimport { EdicaoProduto } from './edicao/edicao-produto.component';\r\nimport { ProdutoService } from './produtos.service';\r\nimport { DetalhesProduto } from './detalhes/detalhes-produto.component';\r\nimport { ExclusaoProduto } from './exclusao/exclusao-produto.component';\r\n\r\n@Component({\r\n    selector: 'produtos',\r\n    templateUrl: './produtos.component.html'\r\n})\r\n\r\nexport class ProdutosComponent implements OnInit{\r\n\r\n    // Exporta para os componentes filhos as informações da grid\r\n    InputProduto: Produto;\r\n\r\n    // Instancia os componentes filhos\r\n    @ViewChild(CadastroProduto) cadastro: CadastroProduto;\r\n    @ViewChild(EdicaoProduto) edicao: EdicaoProduto;\r\n    @ViewChild(DetalhesProduto) detalhes: DetalhesProduto;\r\n    @ViewChild(ExclusaoProduto) exclusao: ExclusaoProduto;\r\n\r\n    // Cria a lista de produtos que será exibida\r\n    public produtos: Produto[];\r\n\r\n    // Importa o serviço responsável pelas chamadas a api\r\n    constructor(\r\n        private ProdutoService: ProdutoService) {\r\n    }\r\n\r\n    // Dispara ao iniciar o componente\r\n    ngOnInit(): void {\r\n        this.BuscarProdutos();\r\n    }\r\n\r\n    // Busca dados na base\r\n    public BuscarProdutos() {\r\n        this.ProdutoService.getProdutos().subscribe(result => {\r\n\r\n            // Preenche a lista de produtos\r\n            this.produtos = result;\r\n\r\n        }, error => console.error(error));;\r\n    }\r\n\r\n    // Cadastro\r\n    public CadastrarProduto() {\r\n        this.cadastro.abrirModal();\r\n    }\r\n\r\n    // Edição\r\n    public EditarProduto(produto: Produto) {\r\n        this.InputProduto = produto;\r\n        this.edicao.abrirModal();\r\n    }\r\n\r\n    // Detalhes\r\n    public VisualizarProduto(produto: Produto) {\r\n        this.InputProduto = produto;\r\n        this.detalhes.abrirModal();\r\n    }\r\n\r\n    // Exclusão\r\n    public ExcluirProduto(produto: Produto) {\r\n        this.InputProduto = produto;\r\n        this.exclusao.abrirModal();\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, Inject, HostListener, OnInit, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Produto } from '../models/produto';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ProdutoService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // Busca na api a lista de produtos\r\n    getProdutos() {\r\n        return this.http.get<Produto[]>(environment.ApiUrl + '/Produtos/');\r\n    }\r\n\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    ApiUrl: 'https://localhost:44338/api'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}